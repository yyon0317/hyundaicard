
/**
 * tab reset
**/
ul.tab-list {
	margin: 0;
	padding: 0;
	list-style: none;
}
.bui-tab-target {
	&:not(.active) {
		@include hidden;
	}
}

/**
 * @name		tab-display
**/
.tab-display {
	display: flex;

	.tab-list {
		display: flex;
		margin: 0;
		padding: 0;
		list-style: none;

		button.tab-item {
			overflow: visible;
			margin: 0;
			padding: 0;
			cursor: pointer;
			border: hidden;
			background-color: transparent;
			appearance: none;
			// @include font((family: default)...);
		}

		.tab-item {			
			.tab-text {
				display: flex;
				position: relative;
				justify-content: center;
				text-decoration: none;
				box-sizing: border-box;
			}

			&.current {
				z-index: 0;
			}
		}
	}

	// tab type
	&.type-a { 
		justify-content: flex-start;
	}

	&.type-b { 
		justify-content: flex-end;
	}

	&.type-c { 
		justify-content: center;
	}

	&.type-d { 
		.tab-list{
			flex: 1 1 100%;
			
			.tab-item {
				flex: 1 1 100%;
			}
		}
	}
}



// tab module-b
.tab-display.module-b {
	$accent: (
		'normal-01': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-12),
				'background-color':	var(--color-base-12),
			),
		),
		'normal-02': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-11),
				'background-color':	var(--color-base-11),
			),
		),
		'normal-03': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-09),
			),
		),
		'normal-04': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-09),
			),
		),
		'accent-01': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-secondary-08),
				'background-color':	var(--color-secondary-08),
			),
		),
		'accent-02': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-secondary-01),
				'background-color':	var(--color-secondary-01),
			),
		)
	); 

	$outline-t: (
		8: (
			'font-weight': 400,
		),
		10: (
			'font-weight': 400,
		),
		12: (
			'font-weight': 400,
		),
		14: (
			'font-weight': 400,
		),
		16: (
			'font-weight': 400,
		),
	);

	@each $i, $name in $outline-t {
		$gutter-value: map-get($gutters, $i); // $gutters 맵에서 해당하는 값 가져오기
		&.outline-t#{$i}x {
			@include set-vw(--line-height,$gutter-value);
			@include set-vw(--height,$gutter-value);
		}
	}
	
	// accent
	@each $accent-name in $accent {
		&.#{nth($accent-name, 1)} {
			--accent-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'color')};
			--accent-border-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'border-color')};
			--accent-background-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'background-color')};
		}
	}

	// @each $name in $outline-t {
	// 	&.outline-t#{nth($name, 1)}x {
	// 		--height: #{nth($name, 1) * $gutter-1};
	// 		--line-height: #{nth($name, 1) * $gutter-1 * 0.5};
	// 	}
	// }

	--normal-color: var(--color-base-09);
	--normal-border-color: var(--color-base-05);

	.tab-list {
		display: flex;
		align-items: center;
		column-gap: calc((var(--line-height) / 1.5) * 0.5);

		.tab-item {
			.tab-text {
				display: flex;
				align-items: center;
				justify-content: center;
				white-space: nowrap;
				text-align: center;
				padding-right: calc(var(--height) / 4.4 - 1px);
				padding-left: calc(var(--height) / 4.4 - 1px);
				box-sizing: border-box;
				border-style: solid;
				border-width: 1px;
				border-color: var(--normal-border-color);
				height: calc(var(--height) / 1.5);
				line-height: calc(var(--line-height) / 1.5); 
				color: var(--normal-color);
				font-size: calc(var(--line-height) / 3.3);
			}   

			&.current {				
				.tab-text {
					color: var(--accent-color);
					border-color: var(--accent-border-color);
					background-color: var(--accent-background-color);
				}
			}
		}
	}

	&.style-b {
		.tab-list {
			.tab-item {
				.tab-text {
					border-radius: calc(var(--height) * 0.25);
				}
			}
		}
	}

	&.style-c {
		.tab-list {
			.tab-item {
				.tab-text {
					border-radius: calc(var(--height) / 2);
				}
			}
		}
	}
}


// tab module-c
.tab-display.module-c {
	$accent: (
		'normal-01': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-12),
				'background-color':	var(--color-base-12),
			),
		),
		'normal-02': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-11),
				'background-color':	var(--color-base-11),
			),
		),
		'normal-03': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-09),
			),
		),
		'normal-04': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-09),
			),
		),
		'accent-01': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-secondary-08),
				'background-color':	var(--color-secondary-08),
			),
		),
		'accent-02': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-secondary-01),
				'background-color':	var(--color-secondary-01),
			),
		)
	);

	$outline-t: (
		8: (
			'font-weight': 400,
		),
		10: (
			'font-weight': 400,
		),
		12: (
			'font-weight': 400,
		),
		14: (
			'font-weight': 400,
		),
		16: (
			'font-weight': 400,
		)
	);
	@each $i, $name in $outline-t {
		$gutter-value: map-get($gutters, $i); // $gutters 맵에서 해당하는 값 가져오기
		&.outline-t#{$i}x {
			@include set-vw(--line-height,$gutter-value);
			@include set-vw(--height,$gutter-value);
		}
	}

	
	// accent
	@each $accent-name in $accent {
		&.#{nth($accent-name, 1)} {
			--accent-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'color')};
			--accent-border-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'border-color')};
			--accent-background-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'background-color')};
		}
	}

	// @each $name in $outline-t {
	// 	&.outline-t#{nth($name, 1)}x {
	// 		--height: #{nth($name, 1) * $gutter-1};
	// 		--line-height: #{nth($name, 1) * $gutter-1 * 0.5};
	// 	}
	// }

	--normal-color: var(--color-base-09);
	--normal-border-color: var(--color-base-05);

	.tab-list {
		display: flex;
		align-items: center;
		border: 1px solid var(--normal-border-color);

		.tab-item {
			position: relative;
			
			+.tab-item {
				border-left: 1px solid var(--normal-border-color);
			}

			.tab-text {
				display: flex;
				align-items: center;
				justify-content: center;
				white-space: nowrap;
				text-align: center;
				padding-right: calc(var(--height) / 4.4 - 1px);
				padding-left: calc(var(--height) / 4.4 - 1px);
				box-sizing: border-box;
				height: calc(var(--height) / 1.5);
				line-height: calc(var(--line-height) / 1.5);
				font-size: calc(var(--line-height) / 3.3);
				color: var(	--normal-color);
			}

			&:focus-within,
			&.current {
				z-index: 1;
			}

			&.current {
				font-weight: 500;

				.tab-text {
					color: var(--accent-color);

					&::before {
						display: block;
						content: '';
						position: absolute;
						top: -1px;
						left: -1px;					
						width: 100%;
						height: 100%;
						z-index: -1;
						border: 1px solid var(--accent-border-color);
						background-color: var(--accent-background-color);
					}
				}
			}
		}
	}

	&.style-b {
		.tab-list {
			border-radius: calc(var(--height) / 6.4);

			.tab-item {
				&:first-child {
					.tab-text {
						&::before {
							border-top-left-radius: calc(var(--height) / 6.4);
							border-bottom-left-radius: calc(var(--height) / 6.4);
						}
					}
				}

				&:last-child {
					.tab-text {
						&::before {
							border-top-right-radius: calc(var(--height) / 6.4);
							border-bottom-right-radius: calc(var(--height) / 6.4);
						}
					}
				}
			}
		}
	}

	&.style-c {                
		.tab-list {
			border-radius: calc(var(--height) / 2);

			.tab-item {
				&:first-child {
					.tab-text {
						&::before {
							border-top-left-radius: calc(var(--height) / 2);
							border-bottom-left-radius: calc(var(--height) / 2);
						}
					}
				}

				&:last-child {
					.tab-text {
						&::before {
							border-top-right-radius: calc(var(--height) / 2);
							border-bottom-right-radius: calc(var(--height) / 2);
						}
					}
				}
			}
		}
	}
}


// tab module-d
.tab-display.module-d {
	$accent: (
		'normal-01': (
			'none': (
				'color':			var(--color-base-12),
				'border-color':		var(--color-base-12),
				'background-color':	var(--color-base-01),
			),
		),
		'normal-02': (
			'none': (
				'color':			var(--color-base-12),
				'border-color':		var(--color-base-11),
				'background-color':	var(--color-base-01),
			),
		),
		'normal-03': (
			'none': (
				'color':			var(--color-base-12),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-01),
			),
		),
		'normal-04': (
			'none': (
				'color':			var(--color-base-12),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-01),
			),
		),
		'accent-01': (
			'none': (
				'color':			var(--color-base-12),
				'border-color':		var(--color-secondary-08),
				'background-color':	var(--color-base-01),
			),
		),
		'accent-02': (
			'none': (
				'color':			var(--color-base-12),
				'border-color':		var(--color-secondary-01),
				'background-color':	var(--color-base-01),
			),
		)
	);

	$outline-t: (
		8: (
			'font-weight': 400,
		),
		10: (
			'font-weight': 400,
		),
		12: (
			'font-weight': 400,
		),
	);

	@each $i, $name in $outline-t {
		$gutter-value: map-get($gutters, $i); // $gutters 맵에서 해당하는 값 가져오기
		&.outline-t#{$i}x {
			@include set-vw(--line-height,$gutter-value);
			@include set-vw(--height,$gutter-value);
		}
	}
	
	// accent
	@each $accent-name in $accent {
		&.#{nth($accent-name, 1)} {
			--accent-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'color')};
			--accent-border-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'border-color')};
			--accent-background-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'background-color')};
		}
	}

	// @each $name in $outline-t {
	// 	&.outline-t#{nth($name, 1)}x {
	// 		--height: #{nth($name, 1) * $gutter-1};
	// 		--line-height: #{nth($name, 1) * $gutter-1 * 0.5};
	// 	}
	// }

	--normal-color: var(--color-base-09);
	--normal-border-color: var(--color-base-08);
	background-color: var(--color-base-01);

	.tab-list {
		display: flex;
		align-items: center;
		
		.tab-item {
			box-shadow: inset 0 -2px 0 0 var(--normal-border-color);
			background-color: var(--accent-background-color);

			.tab-text {
				display: flex;
				align-items: center;
				justify-content: center;
				white-space: nowrap;
				text-align: center;
				padding-right: calc(var(--height) / 4.4 - 1px);
				padding-left: calc(var(--height) / 4.4 - 1px);
				height: calc(var(--height) / 1.5);
				line-height: calc(var(--line-height) / 1.5);
				font-size: calc(var(--line-height) / 3.3);
				color: var(--normal-color);
			}

			&.current {
				.tab-text {
					box-shadow: inset 0 -2px 0 0 var(--accent-border-color);
					color: var(--accent-color);
					font-weight: 500;
				}
			}
		}
	}
}

// tab module-e
.tab-display.module-e {
	$accent: (
		'normal-01': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-12),
				'background-color':	var(--color-base-12),
			),
		),
		'normal-02': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-11),
				'background-color':	var(--color-base-11),
			),
		),
		'normal-03': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-09),
			),
		),
		'normal-04': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-base-09),
				'background-color':	var(--color-base-09),
			),
		),
		'accent-01': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-secondary-08),
				'background-color':	var(--color-secondary-08),
			),
		),
		'accent-02': (
			'none': (
				'color':			var(--color-base-01),
				'border-color':		var(--color-secondary-01),
				'background-color':	var(--color-secondary-01),
			),
		)
	);

	$outline-t: (
		8: (
			'font-weight': 400,
		),
		10: (
			'font-weight': 400,
		),
		12: (
			'font-weight': 400,
		),
		14: (
			'font-weight': 400,
		),
		16: (
			'font-weight': 400,
		)
	);
	@each $i, $name in $outline-t {
		$gutter-value: map-get($gutters, $i); // $gutters 맵에서 해당하는 값 가져오기
		&.outline-t#{$i}x {
			@include set-vw(--line-height,$gutter-value);
			@include set-vw(--height,$gutter-value);
		}
	}

	// accent
	@each $accent-name in $accent {
		&.#{nth($accent-name, 1)} {
			--accent-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'color')};
			--accent-border-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'border-color')};
			--accent-background-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'background-color')};
		}
	}

	// @each $name in $outline-t {
	// 	&.outline-t#{nth($name, 1)}x {
	// 		--height: #{nth($name, 1) * $gutter-1};
	// 		--line-height: #{nth($name, 1) * $gutter-1 * 0.5};
	// 	}
	// }

	--normal-color: var(--color-base-09);
	--normal-border-color: var(--color-base-05);

	.tab-list {
		position: relative;
		display: flex;
		align-items: center;
		border-style: solid;
		border-width: 1px;
		border-color: var(--normal-border-color);

		.tab-item {
			position: relative;

			.tab-text {
				display: flex;
				align-items: center;
				justify-content: center;
				white-space: nowrap;
				text-align: center;
				box-sizing: border-box;
				height: calc(var(--height) / 1.5);
				line-height: calc(var(--line-height) / 1.5);
				font-size: calc(var(--line-height) / 3.3);
				color: var(--normal-color);
				padding-right: calc(var(--height) / 4.4 - 1px);
				padding-left: calc(var(--height) / 4.4 - 1px);
			}

			&:focus-within,
			&.current {
				z-index: 1;
			}

			&.current {
				background-color: var(--accent-background-color);



				.tab-text {
					color: var(--accent-color);

					&::before {
						display: block;
						content: '';
						position: absolute;
						top: -1px;
						right: -1px;
						bottom: -1px;
						left: -1px;
						width: 100%;
						height: 100%;
						z-index: -1;
						border: 1px solid var(--accent-border-color);
						background-color: var(--accent-background-color);
					}
				}
			}
		}
	}

	&.style-b {
		.tab-list {
			border-radius: calc(var(--height) / 6.4);
			.tab-item {
				border-radius: calc(var(--height) / 6.4);

				.tab-text {
					&::before {
						border-radius: calc(var(--height) / 6.4);
					}
				}

			}
		}
	}

	&.style-c {
		.tab-list {
			border-radius: calc(var(--height) / 2);

			.tab-item {
				border-radius: calc(var(--height) / 2);

				.tab-text {					
					&::before {
						border-radius: calc(var(--height) / 2);
					}
				}

			}
		}
	}
}




















// ul.tab-list {
// 	margin: 0;
// 	padding: 0;
// 	list-style: none;
// }

// .bui-tab-target {
// 	&:not(.active) {
// 		@include hidden;
// 	}
// }

// /**
//  * @name		tab-display
// **/
// .bui-tab-display {
// 	display: flex;

// 	.tab-list {
// 		display: flex;
// 		margin: 0;
// 		padding: 0;
// 		list-style: none;

// 		button.tab-item {
// 			overflow: visible;
// 			margin: 0;
// 			padding: 0;
// 			cursor: pointer;
// 			border: hidden;
// 			background-color: transparent;
// 			appearance: none;
// 			// @include font((family: default)...);
// 		}

// 		.tab-item {			
// 			.tab-text {
// 				display: flex;
// 				position: relative;
// 				justify-content: center;
// 				text-decoration: none;
// 				box-sizing: border-box;
// 			}

// 			&.current {
// 				z-index: 0;
// 			}
// 		}
// 	}

// 	// tab type
// 	&.type-a { 
// 		justify-content: flex-start;
// 	}

// 	&.type-b { 
// 		justify-content: flex-end;
// 	}

// 	&.type-c { 
// 		justify-content: center;
// 	}

// 	&.type-d { 
// 		.tab-list{
// 			flex: 1 1 100%;
			
// 			.tab-item {
// 				flex: 1 1 100%;
// 			}
// 		}
// 	}
// }

// // tab module-c
// .bui-tab-display.module-c {
// 	$accent: (
// 		'normal-01': (
// 			'none': (
// 				'color':			var(--bui-color-normal-100),
// 				'border-color':		var(--bui-color-normal-010),
// 				'background-color':	var(--bui-color-normal-010),
// 			),
// 		),
// 		'normal-02': (
// 			'none': (
// 				'color':			var(--bui-color-normal-020),
// 				'border-color':		var(--bui-color-normal-020),
// 				'background-color':	var(--bui-color-normal-100),
// 			),
// 		),
// 		'normal-03': (
// 			'none': (
// 				'color':			var(--bui-color-normal-020),
// 				'border-color':		var(--bui-color-normal-030),
// 				'background-color':	var(--bui-color-normal-100),
// 			),
// 		),
// 		'normal-04': (
// 			'none': (
// 				'color':			var(--bui-color-normal-020),
// 				'border-color':		var(--bui-color-normal-040),
// 				'background-color':	var(--bui-color-normal-100),
// 			),
// 		),
// 		'accent-01': (
// 			'none': (
// 				'color':			var(--bui-color-normal-100),
// 				'border-color':		var(--bui-color-accent-010),
// 				'background-color':	var(--bui-color-accent-010),
// 			),
// 		),
// 		'accent-02': (
// 			'none': (
// 				'color':			var(--bui-color-accent-020),
// 				'border-color':		var(--bui-color-accent-020),
// 				'background-color':	var(--bui-color-normal-100),
// 			),
// 		)
// 	);

// 	$outline: (
// 		8: (
// 			'font-weight': 400,
// 		),
// 		10: (
// 			'font-weight': 400,
// 		),
// 		12: (
// 			'font-weight': 400,
// 		),
// 		14: (
// 			'font-weight': 400,
// 		),
// 		16: (
// 			'font-weight': 400,
// 		),
// 	);


	
// 	// accent
// 	@each $accent-name in $accent {
// 		&.#{nth($accent-name, 1)} {
// 			--accent-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'color')};
// 			--accent-border-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'border-color')};
// 			--accent-background-color: #{ map-get($accent, nth($accent-name, 1), 'none', 'background-color')};
// 		}
// 	}

// 	@each $name in $outline {
// 		&.outline-#{nth($name, 1)}x {
// 			--height: #{nth($name, 1) * $gutter-1};
// 			--line-height: #{nth($name, 1) * $gutter-1 * 0.5};
// 		}
// 	}

// 	--normal-color: var(--bui-color-normal-030);
// 	--normal-border-color: var(--bui-color-normal-050);

// 	.tab-list {
// 		display: flex;
// 		align-items: center;
// 		border: 1rem solid var(--normal-border-color);

// 		.tab-item {
// 			position: relative;

// 			+.tab-item {
// 				border-left: 1rem solid var(--normal-border-color);
// 			}

// 			.tab-text {
// 				display: flex;
// 				align-items: center;
// 				justify-content: center;
// 				white-space: nowrap;
// 				text-align: center;
// 				padding-right: calc(var(--height) / 2.4 - 1rem);
// 				padding-left: calc(var(--height) / 2.4 - 1rem);
// 				box-sizing: border-box;
// 				height: var(--height);
// 				line-height: var(--line-height);
// 				font-size: calc(var(--line-height) / 1.5);
// 				color: var(	--normal-color);
// 			}

// 			&:focus-within,
// 			&.current {
// 				z-index: 1;
// 			}

// 			&.current {
// 				&::before {
// 					display: block;
// 					content: '';
// 					position: absolute;
// 					top: -1rem;
// 					left: -1rem;					
// 					width: 100%;
// 					height: 100%;
// 					border: 1rem solid var(--accent-border-color);
// 					background-color: var(--accent-background-color);
// 				}

// 				.tab-text {
// 					color: var(--accent-color);
// 				}
// 			}
// 		}
// 	}

// 	&.style-b {
// 		.tab-list {
// 			overflow: hidden;
// 			border-radius: calc(var(--height) / 6.4);
// 		}
// 	}

// 	&.style-c {                
// 		.tab-list {
// 			overflow: hidden;
// 			border-radius: calc(var(--height) / 2);
// 		}
// 	}
// }